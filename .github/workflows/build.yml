name: package

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: satackey/action-docker-layer-caching@v0.0.8
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: ingest-file-docker-cache-${GITHUB_REF}-{hash}
          restore-keys: |
            ingest-file-docker-cache-${GITHUB_REF}-
            ingest-file-docker-cache-
      - name: Set up
        run: |
          docker --version
          docker-compose --version
          echo "${GITHUB_REF}"
      - name: Build docker image
        run: |
          make TAG=${GITHUB_SHA} build
          docker tag alephdata/ingest-file:${GITHUB_SHA} alephdata/ingest-file:latest
      - name: Docker pull and start
        run: |
          make TAG=${GITHUB_SHA} services
      - name: Run tests
        run: make TAG=${GITHUB_SHA} test
      # - name: Push docker image (hash)
      #   run: |
      #     docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
      #     docker push alephdata/ingest-file:${GITHUB_SHA}
      # - name: Push docker images for tags
      #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      #   run: |
      #     export ALEPH_TAG=${GITHUB_REF/refs\/tags\//}
      #     docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
      #     docker pull alephdata/aleph-ui-production:${GITHUB_SHA}
      #     for IMAGE in aleph aleph-ui-production ingest-file; do
      #       docker tag alephdata/${IMAGE}:${GITHUB_SHA} alephdata/${IMAGE}:${ALEPH_TAG};
      #       docker push alephdata/${IMAGE}:${ALEPH_TAG};
      #       docker tag alephdata/${IMAGE}:${GITHUB_SHA} alephdata/${IMAGE}:latest;
      #       docker push alephdata/${IMAGE}:latest;
      #     done;
